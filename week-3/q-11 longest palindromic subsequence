class Solution {
public:
  int f(int ind1, int ind2, vector<vector<int>>& v, string& text1, string& text2) {
        if (ind1 < 0 || ind2 < 0) return 0;
        if (v[ind1][ind2] != -1) return v[ind1][ind2];
        
        if (text1[ind1] == text2[ind2]) {
            return v[ind1][ind2] = 1 + f(ind1 - 1, ind2 - 1, v, text1, text2);
        } else {
            return v[ind1][ind2] = max(f(ind1 - 1, ind2, v, text1, text2), f(ind1, ind2 - 1, v, text1, text2));
        }
    }
    int longestPalindromeSubseq(string s) {
        int n=s.length();
        string rev(n,-1);
        for(int i=0;i<n;i++){
            rev[i]=s[n-1-i];
        };
         vector<vector<int>> v(n, vector<int>(n, -1));
        return f(n - 1, n - 1, v, s, rev);
        
    }
};
